name: CI

on:
  push:
    branches: [ "main" ]

jobs:

  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.4

      # Insert your build process and tests here
      # ...

  versioning:
    runs-on: ubuntu-latest
    needs: build-and-test
    outputs:
      release: ${{ steps.go-semver.outputs.NEW_RELEASE }}
      semver: ${{ steps.go-semver.outputs.SEMVER }}
    steps:
      - uses: actions/checkout@v4.1.4
        with:
          fetch-depth: 0 # Fetches tags, required for the program to detect previous tags

      # Install Go Semver Release
      - name: Set up Go
        uses: actions/setup-go@v5.0.0
        with:
          go-version: 1.22.4

      - name: Install Go Semver Release
        run: go install github.com/s0ders/go-semver-release/v4@latest

      # Tests are good, versioning the repository (if any new release is found)
      - name: Go Semver Release
        id: go-semver
        env:
          GO_SEMVER_RELEASE_ACCESS_TOKEN: ${{ secrets.accessToken }}
        run: go-semver-release release https://example.com/my/repo.git --config .semver.yaml

  release:
    runs-on: ubuntu-latest
    needs: versioning
    # Only run this job if a new release was detected
    if: ${{needs.versioning.outputs.release == 'true'}}
    env:
      RELEASE_TAG: ${{needs.build.outputs.semver}}
    steps:
      - uses: actions/checkout@v4.1.4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0

      - name: Login to Docker Hub
        uses: docker/login-action@v3.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Tag artifact with SemVer number
      - name: Docker build pre-release
        uses: docker/build-push-action@v5.3.0
        with:
          push: true
          tags: <image_name>:${{ env.RELEASE_TAG }}
