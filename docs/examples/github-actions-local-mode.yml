name: CI

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.4

      # Insert your build process and unit tests here
      # ...

  versioning:
    runs-on: ubuntu-latest
    outputs:
      release: ${{ steps.go-semver.outputs.NEW_RELEASE }}
      semver: ${{ steps.go-semver.outputs.SEMVER }}
    steps:
      - uses: actions/checkout@v4.1.4
        with:
          fetch-depth: 0 # Fetches tags

      # Install Go Semver Release
      - name: Set up Go
        uses: actions/setup-go@v5.0.0
        with:
          go-version: 1.22.4

      - name: Install Go Semver Release
        run: go install github.com/s0ders/go-semver-release/v5@latest

      # If build and unit tests are green, check if there is a new release.
      # Running in dry-run mode since the repository remote won't be tag anyway because we are in local mode.
      - name: Go Semver Release
        id: go-semver
        run: go-semver-release release . --config .semver.yaml --dry-run

      - name: Git Configuration
        run: |
          git config --global user.email "go-semver-release@ci.com"
          git config --global user.name "Go Semver Release"

      # Actually pushing SemVer tag to remote
      - name: Push Tag
        run: |
          git tag --annotate ${{ steps.go-semver.outputs.SEMVER }} --message "${{ steps.go-semver.outputs.SEMVER }}"
          git push origin ${{ steps.go-semver.outputs.SEMVER }}

  release:
    runs-on: ubuntu-latest
    needs: build
    # Only run this job if a new release was detected
    if: ${{needs.go-build.outputs.release == 'true'}}
    env:
      RELEASE_TAG: ${{needs.build.outputs.semver}}
    steps:
      - uses: actions/checkout@v4.1.4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0

      - name: Login to Docker Hub
        uses: docker/login-action@v3.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Tag artifact with pre-release tag
      - name: Docker build pre-release
        uses: docker/build-push-action@v5.3.0
        with:
          push: true
          tags: <image_name>:${{ env.RELEASE_TAG }}

